# Place this file at .github/workflows/pages.yml
name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]  # Adjust if your default branch is different
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: |
          echo "Contents of repository:"
          ls -la
          echo "Running bundle install..."
          bundle install
          echo "Running jekyll build..."
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
          echo "Build completed. Contents of _site directory:"
          ls -la _site
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Upload entire Jekyll site
        uses: actions/upload-pages-artifact@v1
        with:
          path: "_site"
  
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
